---
jenkins:
  clouds:
  - azureVM:
      azureCredentialsId: "9e713c35-c19b-4ddd-8cd5-110c2733c2e5"
      cloudName: "AzureVMAgentsUKSouth"
      configurationStatus: "pass"
      deploymentTimeout: 1256
      newResourceGroupName: "<AZURE_VM_RESOURCE_GROUP>-uksouth"
      maxVirtualMachinesLimit: 100
      resourceGroupReferenceType: "new"
      vmTemplates:
      - agentLaunchMethod: "SSH"
        builtInImage: "Ubuntu 16.04 LTS"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ubuntu-18.04"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        initScript: "gpasswd -a oeadmin docker \nchmod g+rw /var/run/docker.sock"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-Ubuntu-1804"
        location: "UK South"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDisabled: false
        templateName: "ubuntu1804"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC2s_v2"
        virtualNetworkName: "jenkinsarm-vnet"
      - agentLaunchMethod: "SSH"
        builtInImage: "Ubuntu 16.04 LTS"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ubuntu-16.04"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        initScript: "gpasswd -a oeadmin docker \nchmod g+rw /var/run/docker.sock"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-Ubuntu-1604"
        location: "UK South"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        subnetName: "jenkinsarm-snet"
        templateDisabled: false
        templateName: "ubuntu1604"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC2s_v2"
        virtualNetworkName: "jenkinsarm-vnet"
      - agentLaunchMethod: "SSH"
        builtInImage: "Windows Server 2016"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "rhel-8"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        initScript: |-
          gpasswd -a oeadmin docker
          chmod g+rw /var/run/docker.sock

          (echo n; echo; echo; echo; echo t; echo; echo 31; echo w) | fdisk /dev/sda
          pvcreate /dev/sda4
          vgextend rootvg /dev/sda4
          lvextend -l +100%FREE /dev/rootvg/homelv
          resize2fs /dev/rootvg/homelv
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-RHEL-8"
        location: "UK South"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDisabled: false
        templateName: "rhel8"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC2s_v2"
        virtualNetworkName: "jenkinsarm-vnet"
      - agentLaunchMethod: "SSH"
        builtInImage: "Windows Server 2016"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ws2016-SGX-DCAP"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-Windows-2016"
        location: "UK South"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Windows"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDesc: "ACC-Windows-2016"
        templateDisabled: false
        templateName: "ws16"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC4s_v2"
        virtualNetworkName: "jenkinsarm-vnet"
      - agentLaunchMethod: "SSH"
        builtInImage: "Windows Server 2016"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ws2019-SGX-DCAP"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-Windows-2019"
        location: "UK South"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Windows"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDesc: "ACC-Windows-2019"
        templateDisabled: false
        templateName: "ws19"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC4s_v2"
        virtualNetworkName: "jenkinsarm-vnet"
      - agentLaunchMethod: "SSH"
        builtInImage: "Windows Server 2016"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "win-2019-dockersgx"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        initScript: "Start-Service Docker"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-Windows-2019-Docker"
        location: "UK South"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Windows"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDesc: "ACC-Windows-2019-Docker"
        templateDisabled: false
        templateName: "ws19d"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC4s_v2"
        virtualNetworkName: "jenkinsarm-vnet"  
      - agentLaunchMethod: "SSH"
        builtInImage: "Ubuntu 16.04 LTS"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ubuntu-18.04"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        initScript: "gpasswd -a oeadmin docker \nchmod g+rw /var/run/docker.sock"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "OverWatch"
        location: "UK South"
        noOfParallelJobs: 4
        osDiskSize: 256
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDisabled: false
        templateName: "overwatch"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_D4s_v3"
        virtualNetworkName: "jenkinsarm-vnet"
  - azureVM:
      azureCredentialsId: "9e713c35-c19b-4ddd-8cd5-110c2733c2e5"
      cloudName: "AzureVMAgentsEastUs"
      configurationStatus: "pass"
      deploymentTimeout: 1256
      newResourceGroupName: "<AZURE_VM_RESOURCE_GROUP>-eastus"
      maxVirtualMachinesLimit: 100
      resourceGroupReferenceType: "new"
      vmTemplates:
      - agentLaunchMethod: "SSH"
        builtInImage: "Ubuntu 16.04 LTS"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ubuntu-18.04"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        initScript: "gpasswd -a oeadmin docker \nchmod g+rw /var/run/docker.sock"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-Ubuntu-1804"
        location: "East US"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDisabled: false
        templateName: "ubuntu1804"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC2s_v2"
        virtualNetworkName: "jenkinsarm-vnet"
      - agentLaunchMethod: "SSH"
        builtInImage: "Ubuntu 16.04 LTS"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ubuntu-16.04"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        initScript: "gpasswd -a oeadmin docker \nchmod g+rw /var/run/docker.sock"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-Ubuntu-1604"
        location: "East US"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDisabled: false
        templateName: "ubuntu1604"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC2s_v2"
        virtualNetworkName: "jenkinsarm-vnet"
      - agentLaunchMethod: "SSH"
        builtInImage: "Windows Server 2016"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "rhel-8"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        initScript: |-
          gpasswd -a oeadmin docker
          chmod g+rw /var/run/docker.sock

          (echo n; echo; echo; echo; echo t; echo; echo 31; echo w) | fdisk /dev/sda
          pvcreate /dev/sda4
          vgextend rootvg /dev/sda4
          lvextend -l +100%FREE /dev/rootvg/homelv
          resize2fs /dev/rootvg/homelv
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-RHEL-8"
        location: "East US"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDisabled: false
        templateName: "rhel8"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC2s_v2"
        virtualNetworkName: "jenkinsarm-vnet"
      - agentLaunchMethod: "SSH"
        builtInImage: "Windows Server 2016"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ws2016-SGX-DCAP"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-Windows-2016"
        location: "East US"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Windows"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDesc: "ACC-Windows-2016"
        templateDisabled: false
        templateName: "ws16"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC4s_v2"
        virtualNetworkName: "jenkinsarm-vnet"
      - agentLaunchMethod: "SSH"
        builtInImage: "Windows Server 2016"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ws2019-SGX-DCAP"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-Windows-2019"
        location: "East US"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Windows"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDesc: "ACC-Windows-2019"
        templateDisabled: false
        templateName: "ws19"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC4s_v2"
        virtualNetworkName: "jenkinsarm-vnet"
      - agentLaunchMethod: "SSH"
        builtInImage: "Ubuntu 16.04 LTS"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ubuntu-18.04"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        initScript: "gpasswd -a oeadmin docker \nchmod g+rw /var/run/docker.sock"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "OverWatch"
        location: "East US"
        noOfParallelJobs: 4
        osDiskSize: 256
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDisabled: false
        templateName: "overwatch"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_D4s_v3"
        virtualNetworkName: "jenkinsarm-vnet"
  - azureVM:
      azureCredentialsId: "9e713c35-c19b-4ddd-8cd5-110c2733c2e5"
      cloudName: "AzureVMAgentsWestUS"
      configurationStatus: "pass"
      deploymentTimeout: 1256
      newResourceGroupName: "<AZURE_VM_RESOURCE_GROUP>-westus2"
      maxVirtualMachinesLimit: 100
      resourceGroupReferenceType: "new"
      vmTemplates:
      - agentLaunchMethod: "SSH"
        builtInImage: "Ubuntu 16.04 LTS"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ubuntu-18.04"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        initScript: "gpasswd -a oeadmin docker \nchmod g+rw /var/run/docker.sock"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-Ubuntu-1804"
        location: "West US 2"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDisabled: false
        templateName: "ubuntu1804"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC2s_v2"
        virtualNetworkName: "jenkinsarm-vnet"
      - agentLaunchMethod: "SSH"
        builtInImage: "Ubuntu 16.04 LTS"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ubuntu-16.04"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        initScript: "gpasswd -a oeadmin docker \nchmod g+rw /var/run/docker.sock"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-Ubuntu-1604"
        location: "West US 2"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDisabled: false
        templateName: "ubuntu1604"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC2s_v2"
        virtualNetworkName: "jenkinsarm-vnet"
      - agentLaunchMethod: "SSH"
        builtInImage: "Windows Server 2016"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "rhel-8"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        initScript: |-
          gpasswd -a oeadmin docker
          chmod g+rw /var/run/docker.sock

          (echo n; echo; echo; echo; echo t; echo; echo 31; echo w) | fdisk /dev/sda
          pvcreate /dev/sda4
          vgextend rootvg /dev/sda4
          lvextend -l +100%FREE /dev/rootvg/homelv
          resize2fs /dev/rootvg/homelv
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-RHEL-8"
        location: "West US 2"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDisabled: false
        templateName: "rhel8"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC2s_v2"
        virtualNetworkName: "jenkinsarm-vnet"
      - agentLaunchMethod: "SSH"
        builtInImage: "Windows Server 2016"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ws2016-SGX-DCAP"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-Windows-2016"
        location: "West US 2"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Windows"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDesc: "ACC-Windows-2016"
        templateDisabled: false
        templateName: "ws16"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC4s_v2"
        virtualNetworkName: "jenkinsarm-vnet"
      - agentLaunchMethod: "SSH"
        builtInImage: "Windows Server 2016"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ws2019-SGX-DCAP"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "ACC-Windows-2019"
        location: "West US 2"
        noOfParallelJobs: 1
        osDiskSize: 256
        osType: "Windows"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDesc: "ACC-Windows-2019"
        templateDisabled: false
        templateName: "ws19"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_DC4s_v2"
        virtualNetworkName: "jenkinsarm-vnet"
      - agentLaunchMethod: "SSH"
        builtInImage: "Ubuntu 16.04 LTS"
        credentialsId: "JenkinsOEAdminAgents"
        diskType: "managed"
        doNotUseMachineIfInitFails: true
        enableMSI: false
        enableUAMI: false
        ephemeralOSDisk: false
        executeInitScriptAsRoot: true
        existingStorageAccountName: ""
        imageReference:
          galleryImageDefinition: "ubuntu-18.04"
          galleryImageVersion: "latest"
          galleryName: "<AZURE_VM_GALLERY_NAME>"
          galleryResourceGroup: "<AZURE_VM_GALLERY_RESOURCE_GROUP>"
          gallerySubscriptionId: "<AZURE_VM_GALLERY_SUBSCRIPTION_ID>"
        imageTopLevelType: "advanced"
        initScript: "gpasswd -a oeadmin docker \nchmod g+rw /var/run/docker.sock"
        installDocker: false
        installGit: false
        installMaven: false
        javaPath: "java"
        labels: "OverWatch"
        location: "West US 2"
        noOfParallelJobs: 4
        osDiskSize: 256
        osType: "Linux"
        preInstallSsh: true
        retentionStrategy:
          azureVMCloudRetentionStrategy:
            idleTerminationMinutes: 60
        shutdownOnIdle: false
        storageAccountNameReferenceType: "new"
        storageAccountType: "Standard_LRS"
        subnetName: "jenkinsarm-snet"
        templateDisabled: false
        templateName: "overwatch"
        usageMode: "Only build jobs with label expressions matching this node"
        usePrivateIP: true
        virtualMachineSize: "Standard_D4s_v3"
        virtualNetworkName: "jenkinsarm-vnet"
