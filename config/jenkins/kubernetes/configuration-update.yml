---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: azure-file-share
provisioner: kubernetes.io/azure-file
reclaimPolicy: Retain
mountOptions:
- dir_mode=0777
- file_mode=0777
- uid=1000
- gid=1000
- mfsymlinks
- cache=strict
parameters:
  skuName: Standard_LRS
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-master-configuration
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: azure-file-share
  resources:
    requests:
      storage: 5Gi
---
# Service account the client will use to reset the deployment,
# by default the pods running inside the cluster can do no such things.
kind: ServiceAccount
apiVersion: v1
metadata:
  name: configuration-update
  namespace: default
---
# allow getting status and patching only the one deployment you want to restart
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: configuration-update
  namespace: default
rules:
  - apiGroups: ["apps", "extensions"]
    resources: ["deployments"]
    resourceNames: ["jenkins-master"]
    verbs: ["get", "patch"]
---
# bind the role to the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: configuration-update
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: configuration-update
subjects:
  - kind: ServiceAccount
    name: configuration-update
    namespace: default
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: configuration-update
  namespace: default
spec:
  concurrencyPolicy: Forbid
  schedule: '*/5 * * * *'
  jobTemplate:
    spec:
      backoffLimit: 0
      # We don't want the script to end prematurely as that can leave the directory or configs in a bad state
      activeDeadlineSeconds: 1800
      template:
        spec:
          serviceAccountName: configuration-update
          restartPolicy: Never
          containers:
            - name: kubectl
              image: dtzar/helm-kubectl
              command: ['/bin/sh', '-c']
              args:
              - git clone https://github.com/cyandevs/test-infra ${HOME}/test-infra
                  --depth 2
                  --filter=blob:none
                  --no-checkout
                  --single-branch
                  --branch horizontalscaling;
                git -C ${HOME}/test-infra/ checkout horizontalscaling -- config/jenkins;
                chmod +x ${HOME}/test-infra/config/jenkins/configuration-reload.sh;
                ${HOME}/test-infra/config/jenkins/configuration-reload.sh;
              volumeMounts:
              - name: jenkins-master-configuration
                mountPath: "/var/jenkins_home/configuration"
              env:
              - name: JENKINSADMIN_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: passwords
                    key: jenkinsadmin
              - name: OEADMIN_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: passwords
                    key: oeadmin
              - name: JENKINS_REMOTE_TRIGGER_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: passwords
                    key: remotetrigger
              - name: AZURE_SERVICE_PRINCIPAL_CLIENT_ID
                valueFrom:
                  secretKeyRef:
                    name: jenkinssp
                    key: clientid
              - name: AZURE_SERVICE_PRINCIPAL_SUBSCRIPTION_ID
                valueFrom:
                  secretKeyRef:
                    name: jenkinssp
                    key: subscriptionid
              - name: AZURE_SERVICE_PRINCIPAL_TENANT_ID
                valueFrom:
                  secretKeyRef:
                    name: jenkinssp
                    key: tenantid
              - name: AZURE_SERVICE_PRINCIPAL_SECRET
                valueFrom:
                  secretKeyRef:
                    name: jenkinssp
                    key: secret
              - name: AZURE_VM_RESOURCE_GROUP
                valueFrom:
                  secretKeyRef:
                    name: cloudconfig
                    key: resourcegroup
              - name: AZURE_VM_LOCATION
                valueFrom:
                  secretKeyRef:
                    name: cloudconfig
                    key: location
              - name: AZURE_VM_GALLERY_NAME
                valueFrom:
                  secretKeyRef:
                    name: cloudconfig
                    key: galleryname
              - name: AZURE_VM_GALLERY_RESOURCE_GROUP
                valueFrom:
                  secretKeyRef:
                    name: cloudconfig
                    key: galleryresourcegroup
              - name: AZURE_VM_GALLERY_SUBSCRIPTION_ID
                valueFrom:
                  secretKeyRef:
                    name: cloudconfig
                    key: gallerysubscriptionid
              - name: JENKINSADMIN_EMAIL
                valueFrom:
                  secretKeyRef:
                    name: jenkinsconfig
                    key: jenkinsadmin.email
              - name: DNS_LABEL
                valueFrom:
                  secretKeyRef:
                    name: jenkinsconfig
                    key: dnslabel
              - name: AZURE_KEYVAULT_URL
                valueFrom:
                  secretKeyRef:
                    name: jenkinsconfig
                    key: keyvaulturl
              - name: AZURE_LOCATION
                valueFrom:
                  secretKeyRef:
                    name: jenkinsconfig
                    key: location
          volumes:
          - name: jenkins-master-configuration
            persistentVolumeClaim:
              claimName: jenkins-master-configuration
